<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hunau.system.mapper.SysDomainMapper">

	<resultMap type="SysDomain" id="SysDomainResult">
		<id     property="domainId"     column="domain_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="domainName"   column="domain_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="selectDomainVo">
        select d.domain_id, d.parent_id, d.ancestors, d.domain_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time 
        from sys_domain d
    </sql>
    
	<!--<select id="selectRoleDomainTree" parameterType="Long" resultType="String">
		select concat(d.domain_id, d.domain_name) as domain_name
		from sys_domain d
			left join sys_role_domain rd on d.domain_id = rd.domain_id
		where d.del_flag = '0' and rd.role_id = #{roleId}
		order by d.parent_id, d.order_num
	</select>-->
	
	<select id="selectDomainList" parameterType="SysDomain" resultMap="SysDomainResult">
        <include refid="selectDomainVo"/>
        where d.del_flag = '0'
        <if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="domainName != null and domainName != ''">
			AND domain_name like concat('%', #{domainName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by d.parent_id, d.order_num
    </select>
	
	<select id="checkDomainExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where domain_id = #{domainId} and del_flag = '0'
	</select>
	
	<!--<select id="checkDomainExistTerminal" parameterType="Long" resultType="int">
		select count(1) from work_terminal where domain_id = #{domainId} and del_flag = '0'
	</select>-->
	
	<select id="selectDomainCount" parameterType="Sysdomain" resultType="int">
		select count(1) from sys_domain
		where del_flag = '0'
		<if test="domainId != null and domainId != 0"> and domain_id = #{domainId} </if>
		<if test="parentId != null and parentId != 0"> and parent_id = #{parentId} </if>
	</select>
	
	<select id="checkDomainNameUnique" resultMap="SysDomainResult">
	    <include refid="selectDomainVo"/>
		where domain_name=#{domainName} and parent_id = #{parentId}
	</select>

	<select id="selectDomainById" parameterType="Long" resultMap="SysDomainResult">
		select d.domain_id, d.parent_id, d.ancestors, d.domain_name, d.order_num, d.leader, d.phone, d.email, d.status,
			(select domain_name from sys_domain where domain_id = d.parent_id) parent_name
		from sys_domain d
		where d.domain_id = #{domainId}
	</select>

	<select id="selectDomainListByIds" parameterType="String" resultMap="SysDomainResult">
		select d.domain_id, d.parent_id, d.ancestors, d.domain_name, d.order_num, d.leader, d.phone, d.email, d.status,
			(select domain_name from sys_domain where domain_id = d.parent_id) parent_name
		from sys_domain d
		where d.domain_id in 
		<foreach item="precinct" collection="array" open="(" separator="," close=")">
            #{precinct}
        </foreach>
	</select>
	
	<select id="selectChildrenDomainById" parameterType="Long" resultMap="SysDomainResult">
		select * from sys_domain where find_in_set(#{domainId}, ancestors)
	</select>
	
	<insert id="insertDomain" parameterType="Sysdomain">
 		insert into sys_domain(
 			<if test="domainId != null and domainId != 0">domain_id,</if>
 			<if test="parentId != null and parentId != 0">parent_id,</if>
 			<if test="domainName != null and domainName != ''">domain_name,</if>
 			<if test="ancestors != null and ancestors != ''">ancestors,</if>
 			<if test="orderNum != null and orderNum != ''">order_num,</if>
 			<if test="leader != null and leader != ''">leader,</if>
 			<if test="phone != null and phone != ''">phone,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="status != null">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="domainId != null and domainId != 0">#{domainId},</if>
 			<if test="parentId != null and parentId != 0">#{parentId},</if>
 			<if test="domainName != null and domainName != ''">#{domainName},</if>
 			<if test="ancestors != null and ancestors != ''">#{ancestors},</if>
 			<if test="orderNum != null and orderNum != ''">#{orderNum},</if>
 			<if test="leader != null and leader != ''">#{leader},</if>
 			<if test="phone != null and phone != ''">#{phone},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="status != null">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateDomain" parameterType="SysDomain">
 		update sys_domain
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="domainName != null and domainName != ''">domain_name = #{domainName},</if>
 			<if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
 			<if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
 			<if test="leader != null">leader = #{leader},</if>
 			<if test="phone != null">phone = #{phone},</if>
 			<if test="email != null">email = #{email},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where domain_id = #{domainId}
	</update>
	
	<update id="updateDomainChildren" parameterType="java.util.List">
	    update sys_domain set ancestors =
	    <foreach collection="domains" item="item" index="index"
	        separator=" " open="case domain_id" close="end">
	        when #{item.domainId} then #{item.ancestors}
	    </foreach>
	    ,status = 
	    <foreach collection="domains" item="item" index="index"
	        separator=" " open="case domain_id" close="end">
	        when #{item.domainId} then #{item.status}
	    </foreach>
	    where domain_id in
	    <foreach collection="domains" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.domainId}
	    </foreach>
	 </update>

	<delete id="deleteDomainById" parameterType="Long">
		update sys_domain set del_flag = '2' where domain_id = #{domainId}
	</delete>
	
	<update id="updateDomainStatus" parameterType="SysDomain">
 	    update sys_domain
 	    <set>
 	        <if test="status != null and status != ''">status = #{status},</if>
 	        <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 	        update_time = sysdate()
        </set>
 	    where domain_id in (${ancestors})
	</update>

</mapper> 